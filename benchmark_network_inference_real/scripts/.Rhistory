group_by(methods) %>%
summarise(average_percent = mean(percent_agreement))
View(ss_sim_sum)
rownames(ss_sim_sum) = ss_sim_sum$methods
sim_df[rownames(ss_sim_num), 'percent_agreement' = ss_sim_sum$average_percent
rownames(ss_sim_sum) = ss_sim_sum$methods
sim_df[rownames(ss_sim_num), 'percent_agreement' = ss_sim_sum$average_percent
rownames(ss_sim_sum) = ss_sim_sum$methods
sim_df[rownames(ss_sim_num), 'percent_agreement'] = ss_sim_sum$average_percent
sim_df[rownames(ss_sim_num), 'percent_agreement'] = ss_sim_sum$average_percent
ss_sim_sum
rownames(ss_sim_sum)
ss_sim_sum = data.frame(ss_sim_sum)
rownames(ss_sim_sum) = ss_sim_sum$methods
sim_df[rownames(ss_sim_num), 'percent_agreement'] = ss_sim_sum$average_percent
sim_df[rownames(ss_sim_sum), 'percent_agreement'] = ss_sim_sum$average_percent
View(sim_df)
View(sim_df)
library(ggplot2)
library(dplyr)
library(cowplot)
##### get the grns across different methods #####
GRN_methods = list.dirs("../output/curated_networks/myeloid_progenitors_full/", full.names = FALSE, recursive = FALSE)
GRN_methods = c(GRN_methods, 'IQCELL')
GRN_methods = GRN_methods[GRN_methods != 'run_OneSC']
OneSC_grn = read.csv("../output/curated_networks/myeloid_progenitors_full/run_OneSC/curated_network_density.csv", row.names = 1)
sim_df = data.frame(row.names = GRN_methods,
'methods' = GRN_methods,
'percent_similarity' = NA)
for(tmp_method in GRN_methods) {
if(tmp_method == 'IQCELL') {
tmp_grn = read.csv("../Beeline_benchmark/run_iQcell/myeloid_progenitors_full/iQcell_network.csv")
tmp_grn$X = NULL
} else if(tmp_method == 'run_OneSC') {
next()
} else {
tmp_grn = read.csv(file.path("../output/curated_networks/myeloid_progenitors_full/", tmp_method, 'curated_network_density.csv'), row.names = 1)
}
percent_agree = length(intersect(paste0(OneSC_grn$TF, "_", OneSC_grn$TG, "_", OneSC_grn$Type), paste0(tmp_grn$TF, "_", tmp_grn$TG, "_", tmp_grn$Type))) / length(paste0(OneSC_grn$TF, "_", OneSC_grn$TG, "_", OneSC_grn$Type))
sim_df[tmp_method, 'percent_similarity'] = percent_agree
}
p = ggplot(sim_df, aes(x = reorder(methods, -percent_similarity), y = percent_similarity)) +
geom_bar(stat = 'identity') +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Methods') +
ylab("Percent similarity to OneSC's inferred network")
View(sim_df)
rownames(sim_df) = toupper(rownames(sim_df))
sim_df$methods = toupper(sim_df$methods)
p = ggplot(sim_df, aes(x = reorder(methods, -percent_similarity), y = percent_similarity)) +
geom_bar(stat = 'identity') +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Methods') +
ylab("Percent similarity to OneSC's inferred network")
##### see if there is a correlation between percent similarity and steady states similarity ######
ss_sim = read.csv("../output/sim_ss_comparison/plot_df.csv", row.names = 1)
ss_sim_sum = ss_sim %>%
group_by(methods) %>%
summarise(average_percent = mean(percent_agreement))
ss_sim_sum = data.frame(ss_sim_sum)
rownames(ss_sim_sum) = ss_sim_sum$methods
sim_df[rownames(ss_sim_sum), 'percent_agreement'] = ss_sim_sum$average_percent
View(sim_df)
sim_df = sim_df[is.na(sim_df$methods) == FALSE, ]
View(sim_df)
colnames(sim_df)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Methods') +
ylab("Percent similarity to OneSC's inferred network")
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent similarity to OneSC inferred network') +
ylab("Average top steady states similarity")
p
colnames(sim_df)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent similarity to OneSC inferred network') +
ylab("Average top steady states similarity")
p
cor(sim_df$percent_similarity, sim_df$percent_agreement)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent similarity to OneSC inferred network') +
ylab("Average top steady states similarity")
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent similarity to OneSC inferred network') +
ylab("Average top steady states similarity")
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent similarity to OneSC inferred network') +
ylab("Average top steady states similarity") +
ggtitle("Average top steady state similarity vs percent similarity to OneSC inferred network Pearson: 0.64")
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top steady states similarity") +
ggtitle("Average top steady state similarity vs percent similarity to OneSC inferred network Pearson: 0.64")
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average simulation steady states similarity") +
ggtitle("Average top steady state similarity vs percent similarity to OneSC inferred network Pearson: 0.64")
o
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average simulation steady states similarity") +
ggtitle("Percent overlap with OneSC inferred network vs simulation steady states similarity Pearson: 0.64")
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity")
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 8)
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 12, height = 8)
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 10, height = 6)
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 12, height = 6)
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 12, height = 8)
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity")
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0, 0.6)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity")
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.1, 0.5)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity")
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.5)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity")
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity")
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity") +
annotate(
"text",
x = 4,  # X position of the text
y = 4.5,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "red"  # Text color
)
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity") +
annotate(
"text",
x = 0.5,  # X position of the text
y = 0.35,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "red"  # Text color
)
o
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity") +
annotate(
"text",
x = 0.5,  # X position of the text
y = 0.25,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "red"  # Text color
)
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity") +
annotate(
"text",
x = 0.3,  # X position of the text
y = 0.25,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "red"  # Text color
)
p
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity") +
annotate(
"text",
x = 0.3,  # X position of the text
y = 0.25,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "blue"  # Text color
)
p
ggsave(filename = '../output/compare_networks_similarity/test.png', plot = p, width = 8, height = 6)
library(ggplot2)
library(dplyr)
library(cowplot)
GRN_methods = list.dirs("../output/curated_networks/myeloid_progenitors_full/", full.names = FALSE, recursive = FALSE)
GRN_methods = c(GRN_methods, 'IQCELL')
GRN_methods = GRN_methods[GRN_methods != 'run_OneSC']
OneSC_grn = read.csv("../output/curated_networks/myeloid_progenitors_full/run_OneSC/curated_network_density.csv", row.names = 1)
sim_df = data.frame(row.names = GRN_methods,
'methods' = GRN_methods,
'percent_similarity' = NA)
for(tmp_method in GRN_methods) {
if(tmp_method == 'IQCELL') {
tmp_grn = read.csv("../Beeline_benchmark/run_iQcell/myeloid_progenitors_full/iQcell_network.csv")
tmp_grn$X = NULL
} else if(tmp_method == 'run_OneSC') {
next()
} else {
tmp_grn = read.csv(file.path("../output/curated_networks/myeloid_progenitors_full/", tmp_method, 'curated_network_density.csv'), row.names = 1)
}
percent_agree = length(intersect(paste0(OneSC_grn$TF, "_", OneSC_grn$TG, "_", OneSC_grn$Type), paste0(tmp_grn$TF, "_", tmp_grn$TG, "_", tmp_grn$Type))) / length(paste0(OneSC_grn$TF, "_", OneSC_grn$TG, "_", OneSC_grn$Type))
sim_df[tmp_method, 'percent_similarity'] = percent_agree
}
rownames(sim_df) = toupper(rownames(sim_df))
sim_df$methods = toupper(sim_df$methods)
p = ggplot(sim_df, aes(x = reorder(methods, -percent_similarity), y = percent_similarity)) +
geom_bar(stat = 'identity') +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Methods') +
ylab("Percent similarity to OneSC's inferred network")
p
##### see if there is a correlation between percent similarity and steady states similarity ######
ss_sim = read.csv("../output/sim_ss_comparison/plot_df.csv", row.names = 1)
ss_sim_sum = ss_sim %>%
group_by(methods) %>%
summarise(average_percent = mean(percent_agreement))
ss_sim_sum = data.frame(ss_sim_sum)
rownames(ss_sim_sum) = ss_sim_sum$methods
sim_df[rownames(ss_sim_sum), 'percent_agreement'] = ss_sim_sum$average_percent
sim_df = sim_df[is.na(sim_df$methods) == FALSE, ]
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation steady states similarity") +
annotate(
"text",
x = 0.3,  # X position of the text
y = 0.25,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "blue"  # Text color
)
p = ggplot(sim_df, aes(x = percent_similarity, y = percent_agreement)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black") +
geom_text(aes(label = methods), vjust = -1, hjust = 0.5) +
theme_cowplot() +
ylim(c(0, 1)) +
xlim(c(0.05, 0.51)) +
xlab('Percent overlap with OneSC inferred network') +
ylab("Average top simulation terminal states similarity") +
annotate(
"text",
x = 0.3,  # X position of the text
y = 0.25,  # Y position of the text
label = paste("Pearson r =", round(cor(sim_df$percent_similarity, sim_df$percent_agreement), 2)),  # Text label with correlation
size = 5,  # Font size
color = "blue"  # Text color
)
p
p = ggplot(sim_df, aes(x = reorder(methods, -percent_similarity), y = percent_similarity)) +
geom_bar(stat = 'identity') +
theme_cowplot() +
ylim(c(0, 1)) +
xlab('Methods') +
ylab("Percent similarity to OneSC's inferred network")
p
library(ggplot2)
library(stringr)
library(dplyr)
library(viridis)
library(cowplot)
output_path = "../output/sim_ss_comparison"
dir.create(output_path, recursive = TRUE)
datatype = 'myeloid_progenitors_full'
ss_path = "../output/extract_states/myeloid_progenitors_full/"
curate_ss <- function(ss_path) {
state_df = data.frame()
for(temp_file in list.files(ss_path)) {
temp_state_df = read.csv(file.path(ss_path, temp_file), row.names = 1)
if(ncol(state_df) == 0) {
state_df = temp_state_df
} else {
state_df = cbind(state_df, temp_state_df)
}
}
state_df = state_df[!duplicated(as.list(state_df))]
return(state_df)
}
calc_max_sim <- function(reference_state, sim_states) {
all_percent_agree = c()
for(unique_ss in colnames(sim_states)) {
num_diff = sum(abs(sim_states[, unique_ss] - reference_state))
percent_agree = 1 - (num_diff / length(reference_state))
all_percent_agree = c(all_percent_agree, percent_agree)
}
return(max(all_percent_agree))
}
state_df = curate_ss(ss_path)
plot_df = data.frame()
for(temp_method in list.files(file.path("../output/steady_states/", datatype))) {
print(temp_method)
sim_states = read.csv(file.path("../output/steady_states/", datatype, temp_method, "density/unique_steady_states.csv"), row.names = 1)
for(temp_state in colnames(state_df)) {
print(temp_state)
reference_state = state_df[, temp_state]
temp_plot_df = data.frame('methods' = c(temp_method),
'states' = c(temp_state),
'percent_agreement' = calc_max_sim(reference_state, sim_states))
plot_df = rbind(plot_df, temp_plot_df)
}
}
##### get the iqcell steady states ######
pt_paths = list.dirs("../output/iQcell_simulations/myeloid_progenitors_full/", recursive = FALSE, full.names = FALSE)
multiple_read_df <- function(x) {
return(read.csv(file.path("../output/iQcell_simulations/myeloid_progenitors_full/", x, "in_out/ABNfiles/9.2_profilesOutput.csv"), stringsAsFactors=FALSE))
}
all_iqcell_states = lapply(pt_paths, multiple_read_df) %>%
Reduce(function(x, y) rbind(x, y), .) %>%
t()
all_iqcell_states = all_iqcell_states[rownames(state_df), ]
all_iqcell_states = as.data.frame(all_iqcell_states)
all_iqcell_states =  all_iqcell_states %>% mutate_all(as.numeric)
#all_iqcell_states = as.numeric(all_iqcell_states)
for(temp_state in colnames(state_df)) {
print(temp_state)
reference_state = state_df[, temp_state]
temp_plot_df = data.frame('methods' = c('iQcell'),
'states' = c(temp_state),
'percent_agreement' = calc_max_sim(reference_state, all_iqcell_states))
plot_df = rbind(plot_df, temp_plot_df)
}
plot_df = plot_df[plot_df$states %in% c('Erythrocytes', 'Granulocytes', 'Monocytes', 'MK'), ]
plot_df$percent_agreement = round(plot_df$percent_agreement, 2)
plot_df[plot_df$methods == 'run_OneSC', 'methods'] = 'OneSC'
plot_df$methods = toupper(plot_df$methods)
cat_ss = plot_df %>%
dplyr::group_by(methods) %>%
summarise_at(vars(percent_agreement), mean) %>%
arrange(percent_agreement)
plot_df$methods = factor(plot_df$methods, levels = cat_ss$methods)
write.csv(plot_df, file.path(output_path, 'plot_df.csv'))
p = ggplot(plot_df, aes(x = methods, y = states, fill= percent_agreement)) +
geom_tile() +
geom_text(aes(label = percent_agreement)) +
ylab("Steady States") +
xlab("Methods") +
scale_fill_viridis(discrete=FALSE) +
guides(fill=guide_legend(title="Top \nSteady States \nSimilarity")) +
theme_half_open() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
coord_flip()
p
p = ggplot(plot_df, aes(x = methods, y = states, fill= percent_agreement)) +
geom_tile() +
geom_text(aes(label = percent_agreement)) +
ylab("Terminal States") +
xlab("Methods") +
scale_fill_viridis(discrete=FALSE) +
guides(fill=guide_legend(title="Top \tTerminal States \nSimilarity")) +
theme_half_open() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
coord_flip()
ggsave(filename = file.path(output_path, paste0(datatype, ".png")), plot = p, width = 5, height = 8)
p = ggplot(plot_df, aes(x = methods, y = states, fill= percent_agreement)) +
geom_tile() +
geom_text(aes(label = percent_agreement)) +
ylab("Terminal States") +
xlab("Methods") +
scale_fill_viridis(discrete=FALSE) +
guides(fill=guide_legend(title="Top \nTerminal \nStates \nSimilarity")) +
theme_half_open() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
coord_flip()
ggsave(filename = file.path(output_path, paste0(datatype, ".png")), plot = p, width = 5, height = 8)
p = ggplot(plot_df, aes(x = methods, y = states, fill= percent_agreement)) +
geom_tile() +
geom_text(aes(label = percent_agreement)) +
ylab("Terminal States") +
xlab("Methods") +
scale_fill_viridis(discrete=FALSE) +
guides(fill=guide_legend(title="Top \nTerminal States \nSimilarity")) +
theme_half_open() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
coord_flip()
ggsave(filename = file.path(output_path, paste0(datatype, ".png")), plot = p, width = 5, height = 8)
p = ggplot(plot_df, aes(x = methods, y = states, fill= percent_agreement)) +
geom_tile() +
geom_text(aes(label = percent_agreement)) +
ylab("Terminal States") +
xlab("Methods") +
scale_fill_viridis(discrete=FALSE) +
guides(fill=guide_legend(title="Top \nTerminal \nStates \nSimilarity")) +
theme_half_open() +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
coord_flip()
ggsave(filename = file.path(output_path, paste0(datatype, "_copy.png")), plot = p, width = 5, height = 8)
