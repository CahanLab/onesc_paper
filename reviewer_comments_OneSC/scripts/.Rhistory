library(ggplot2)
library(cowplot)
library(ggrepel)
data_type = 'myeloid_progenitors_full'
UMAP_coord = read.csv(file.path('../output/test_zero_floor_OneSC/myeloid_progenitors_full/wildtype_UMAPs/UMAP_coord.csv'), row.names = 1)
View(UMAP_coord)
p1 = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color=cell_types)) +
geom_point() +
scale_color_brewer(palette = "Set2") +
theme_half_open() +
labs(color = "Cell Types") +
ylab('UMAP_2') +
xlab('UMAP_1') +
theme(text = element_text(size = 14),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank(),  # Remove x-axis ticks
axis.text.y = element_blank(),  # Remove y-axis labels
axis.ticks.y = element_blank(), # Remove y-axis ticks
legend.position = 'right')
p1
View(UMAP_coord)
p1 = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color=steady_states)) +
geom_point() +
scale_color_brewer(palette = "Set2") +
theme_half_open() +
labs(color = "Cell Types") +
ylab('UMAP_2') +
xlab('UMAP_1') +
theme(text = element_text(size = 14),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank(),  # Remove x-axis ticks
axis.text.y = element_blank(),  # Remove y-axis labels
axis.ticks.y = element_blank(), # Remove y-axis ticks
legend.position = 'right')
p1
p2 = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color=sim_time)) +
geom_point() +
theme_half_open() +
labs(color = 'Simulation Steps') +
scale_colour_viridis_c() +
ylab('UMAP_2') +
xlab('UMAP_1') +
theme(text = element_text(size = 14),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank(),  # Remove x-axis ticks
axis.text.y = element_blank(),  # Remove y-axis labels
axis.ticks.y = element_blank(), # Remove y-axis ticks
legend.position = 'right')
å½­
p2
correlation_df = read.csv(file.path("../output/test_zero_floor_OneSC/myeloid_progenitors_full/wildtype_UMAPs/dist_mat.csv"), row.names = 1)
UMAP_coord$cell_types = rownames(correlation_df)[apply(correlation_df, MARGIN = 2, FUN = which.min)]
UMAP_coord[UMAP_coord$steady_states == 'other', 'cell_types'] = 'other'
p1 = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color=cell_types)) +
geom_point() +
scale_color_brewer(palette = "Set2") +
theme_half_open() +
labs(color = "Cell Types") +
ylab('UMAP_2') +
xlab('UMAP_1') +
theme(text = element_text(size = 14),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank(),  # Remove x-axis ticks
axis.text.y = element_blank(),  # Remove y-axis labels
axis.ticks.y = element_blank(), # Remove y-axis ticks
legend.position = 'right')
p2 = ggplot(UMAP_coord, aes(x=UMAP_1, y=UMAP_2, color=sim_time)) +
geom_point() +
theme_half_open() +
labs(color = 'Simulation Steps') +
scale_colour_viridis_c() +
ylab('UMAP_2') +
xlab('UMAP_1') +
theme(text = element_text(size = 14),
axis.text.x = element_blank(),  # Remove x-axis labels
axis.ticks.x = element_blank(),  # Remove x-axis ticks
axis.text.y = element_blank(),  # Remove y-axis labels
axis.ticks.y = element_blank(), # Remove y-axis ticks
legend.position = 'right')
p1
ggsave(filename = file.path(file.path("../output/test_zero_floor_OneSC/myeloid_progenitors_full/wildtype_UMAPs/UMAP_ct.png")), plot = p1, width = 5, height = 4)
ggsave(filename = file.path(file.path("../output/test_zero_floor_OneSC/myeloid_progenitors_full/wildtype_UMAPs/UMAP_sim_time.png")), plot = p2, width = 5, height = 4)
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)
##### set up the working directory #####
out_path = '../output/test_zero_floor_OneSC/myeloid_progenitors_full/ss_prop/'
dir.create(out_path, recursive = TRUE)
##### set up the working directory #####
out_path = '../output/test_zero_floor_OneSC/myeloid_progenitors_full/ss_prop/'
dir.create(out_path, recursive = TRUE)
##### plot out all the perturbation ######
all_files = list.files("../output/test_zero_floor_OneSC/myeloid_progenitors_full/ss_prop/")
for(temp_file in all_files) {
proportion_df = read.csv(file.path("../output/test_zero_floor_OneSC/myeloid_progenitors_full/ss_prop/", temp_file))
long_prop_df = proportion_df %>%
pivot_longer(-X)
colnames(long_prop_df) = c("TF", "states", "counts")
if(grepl('day_4_EB', temp_file)) {
plot_title = 'EB'
} else if(grepl('myeloid', temp_file)) {
plot_title = 'Mouse Hematopoietic'
} else if(grepl("t_cell", temp_file)) {
plot_title = 'T-cells'
}
if(grepl('knockout', temp_file)) {
perturb_type = 'knockout'
} else if(grepl('overexpression', temp_file)) {
perturb_type = 'overexpression'
}
long_prop_df$cat = NA
long_prop_df[long_prop_df$TF == 'wild_type', 'cat'] = 'WT'
if(perturb_type == 'knockout') {
long_prop_df[long_prop_df$TF != 'wild_type', 'cat'] = 'KO'
} else if(perturb_type == 'overexpression') {
long_prop_df[long_prop_df$TF != 'wild_type', 'cat'] = 'OE'
}
p = ggplot(long_prop_df, aes(fill=states, y=counts, x=TF)) +
geom_bar(position="stack", stat="identity") +
theme_half_open() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
facet_grid(
rows = vars(cat),
scales = "free_y",
space = "free_y",
switch = "x"
) +
theme(
panel.spacing = unit(x = 0.2, units = "lines"),
strip.background = element_blank(),
strip.text.y = element_blank(),
text = element_text(size = 20),
axis.text = element_text(size = 18)
) +
ylab(paste0('# / 200 simulations')) +
xlab(paste0(perturb_type, " of TFs")) +
coord_flip() +
guides(fill=guide_legend(title="Final States"))
ggsave(filename = file.path(out_path, paste0(perturb_type, "_", plot_title, "_plots.png")), plot = p, width = 6, height = 8)
}
